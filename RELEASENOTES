Release notes for python-sflow library and splitsflow application

27-04-2021
* splitsflow - v0.5.0: bug in read_collectorlist() - keep on adding threads
Modified in only adding new collectors, modify on change of IP address or port and remove unused collectors

26-04-2021
* splitsflow - v0.4.10: cleanup unused, commented code; Collector _init log on INFO level in stead of DEBUG

06-04-2021
* splitsflow - v.0.4.9: read_prefixlist log at level info in stead of debug. Use logrotate to keep logfile managable


29-04-2019
* splitsflow - v.0.4.5: added writing pid file
* update_prefixlist - v0.2: implemented reading and writing prefix list; signal splitsflow

25-04-2019
* splitsflow - v0.4.4: removed unused verbose parser argument
* update_prefixlist - v0.1: added module to write prefixlist file from BGP advertisements/withdraws

24-04-2019
* splitsflow - v0.4.3: removed write_prefixlist() function - will be seperated

01-02-2019
* splitsflow - v0.4.2: in split_records() also support for SAMPLE_DATA_FLOW_EXPANDED_RECORD

31-01-2019
* sflow.py - v 0.2.4: added implementation of ExpandedFlowSample()


30-03-2017
* sflow.py - v 0.2.2: raise EOFError occured in CounterSample.unpack() routine
  * print statements to see what's going - temporary. To be captured by calling routine
  * added (template) structures for Counters type 6-10 (ieee80211, lag, slow_path, ib, sfp)
  * structure for LAG counter implemented
  * class flowdata_record_ethernet() implemented
* splitsflow.py - v0.4.3
  * logger.debug repr(sample) in case of CounterSample object

06-01-2017
* splitsflow.py - v0.4.2
  * bug: logger always initialized with 'debug'. Modified in cfg['loglevel']

03-12-2016
* splitsflow.py - v0.4.1
  * daemon mode
  * support for signals HUP and INT, SIGHUP reloads collector and prefix list; SIGINT stops program
  * splitting flow sample records based on destination IP; sent them to destinations in collectors list

19-09-2016
* sflow - v.0.1: added pack functions to be able to send sFlow data
* splitsflow: v.0.1:
  * read from network
  * split sFlow Sample records based on destination IP prefix
  * pack Sample records into separate sFlow packets

23-06-2016
* sflow - v0.01: basic functions; classes created. unpack of flowdata possible
* splitsflow: test application to read data from the netwrok and unpack sFlow data.
    represent data on screen with the repr() function
